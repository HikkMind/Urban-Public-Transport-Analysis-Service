{"ast":null,"code":"var _jsxFileName = \"D:\\\\Urban-Public-Transport-Analysis-Service\\\\ui\\\\src\\\\components\\\\testMagic\\\\testMagic.jsx\";\nimport React from \"react\";\nimport { MapContainer, TileLayer, Polyline, Circle } from 'react-leaflet';\nimport styles from './testMagic.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestMagic() {\n  const geoObject = require('./graph.json');\n  const limeOptions = {\n    color: 'lime'\n  };\n  let nodes = geoObject.nodes.features.map(item => [item.properties.y, item.properties.x]);\n  let edges = geoObject.edges.features.map(item => [item.geometry.coordinates.map(el => [el[1], el[0]])]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.map,\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: styles.MapContainer,\n      center: [59.920505, 30.343228],\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), nodes.map(el => /*#__PURE__*/_jsxDEV(Circle, {\n        center: el,\n        radius: 10\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Polyline, {\n        pathOptions: limeOptions,\n        positions: edges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}\n_c = TestMagic;\nexport default TestMagic;\nvar _c;\n$RefreshReg$(_c, \"TestMagic\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","Circle","styles","jsxDEV","_jsxDEV","TestMagic","geoObject","require","limeOptions","color","nodes","features","map","item","properties","y","x","edges","geometry","coordinates","el","className","children","center","zoom","scrollWheelZoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","radius","id","pathOptions","positions","_c","$RefreshReg$"],"sources":["D:/Urban-Public-Transport-Analysis-Service/ui/src/components/testMagic/testMagic.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { MapContainer, TileLayer,  Polyline, Circle} from 'react-leaflet'\r\nimport styles from './testMagic.module.css'\r\n\r\n\r\nfunction TestMagic() {\r\n    const geoObject = require('./graph.json');\r\n    const limeOptions = { color: 'lime' }\r\n    let nodes = geoObject.nodes.features.map(item => [item.properties.y, item.properties.x]);\r\n    let edges = geoObject.edges.features.map(item => [item.geometry.coordinates.map((el) => ([el[1], el[0]]))]);\r\n    \r\n    return (\r\n      <div className={styles.map}>\r\n        <MapContainer className={styles.MapContainer} center={[59.920505, 30.343228]} zoom={13} scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {(nodes.map((el) =>\r\n          (\r\n              <Circle key={el.id} center={el} radius={10}></Circle>\r\n          )\r\n          ))}\r\n          <Polyline pathOptions={limeOptions} positions={edges}></Polyline>\r\n       </MapContainer>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TestMagic"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAGC,QAAQ,EAAEC,MAAM,QAAO,eAAe;AACzE,OAAOC,MAAM,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,SAASA,CAAA,EAAG;EACjB,MAAMC,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;EACzC,MAAMC,WAAW,GAAG;IAAEC,KAAK,EAAE;EAAO,CAAC;EACrC,IAAIC,KAAK,GAAGJ,SAAS,CAACI,KAAK,CAACC,QAAQ,CAACC,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,CAACC,CAAC,EAAEF,IAAI,CAACC,UAAU,CAACE,CAAC,CAAC,CAAC;EACxF,IAAIC,KAAK,GAAGX,SAAS,CAACW,KAAK,CAACN,QAAQ,CAACC,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAACK,QAAQ,CAACC,WAAW,CAACP,GAAG,CAAEQ,EAAE,IAAM,CAACA,EAAE,CAAC,CAAC,CAAC,EAAEA,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;EAE3G,oBACEhB,OAAA;IAAKiB,SAAS,EAAEnB,MAAM,CAACU,GAAI;IAAAU,QAAA,eACzBlB,OAAA,CAACN,YAAY;MAACuB,SAAS,EAAEnB,MAAM,CAACJ,YAAa;MAACyB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;MAACC,IAAI,EAAE,EAAG;MAACC,eAAe,EAAE,KAAM;MAAAH,QAAA,gBAC7GlB,OAAA,CAACL,SAAS;QACR2B,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACArB,KAAK,CAACE,GAAG,CAAEQ,EAAE,iBAEXhB,OAAA,CAACH,MAAM;QAAasB,MAAM,EAAEH,EAAG;QAACY,MAAM,EAAE;MAAG,GAA9BZ,EAAE,CAACa,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAExD,CAAC,eACD3B,OAAA,CAACJ,QAAQ;QAACkC,WAAW,EAAE1B,WAAY;QAAC2B,SAAS,EAAElB;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEZ;AAACK,EAAA,GAtBQ/B,SAAS;AAwBlB,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}