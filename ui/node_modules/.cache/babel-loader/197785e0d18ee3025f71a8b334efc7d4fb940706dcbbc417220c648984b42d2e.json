{"ast":null,"code":"var _jsxFileName = \"D:\\\\Urban-Public-Transport-Analysis-Service\\\\ui\\\\src\\\\components\\\\cityForm\\\\cityForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { cityService } from \"../../services/city.service\";\nimport Select from 'react-select';\nimport styles from './CityForm.module.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  control: (base, state) => ({\n    ...base,\n    border: state.isFocused ? '1px solid #8a2be2' : 0,\n    transition: 'border-color 0.4s ease',\n    // This line disable the blue border\n    boxShadow: state.isFocused ? '0 0 10 00000080' : 0,\n    height: 40,\n    padding: 0,\n    outline: 'none',\n    marginTop: 0,\n    \"&:hover\": {\n      border: state.isFocused ? '1px solid #8a2be2' : 0,\n      boxShadow: state.isFocused ? '0 0 10 00000080' : 0\n    },\n    fontSize: 15\n  })\n};\nfunction CityForm() {\n  _s();\n  const [cities, setCities] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await cityService.getAll();\n      let tempdata = [];\n      // filtering cities\n\n      for (let i = 0; i < data.length; ++i) {\n        if (data[i].population < 100000) {\n          continue;\n        }\n        let tempObject = {};\n        tempObject.value = data[i].name;\n        tempObject.label = data[i].name;\n        tempObject.lat = data[i].coords.lat;\n        tempObject.lon = data[i].coords.lon;\n        tempdata.push(tempObject);\n      }\n      setCities(tempdata);\n    };\n    fetchData();\n  }, []);\n  const [selectedOption, setSelectedOption] = useState(cities);\n  function onChangeHandler(selectedOption) {\n    setSelectedOption(selectedOption);\n    console.log(`Selected: ${selectedOption.label}`);\n  }\n  console.log(selectedOption);\n  // passing data to new page\n  let dataToApp = {\n    type: \"City\",\n    dataArr: []\n  };\n  const navigate = useNavigate();\n  function handler() {\n    if (selectedOption.length === 0) {\n      alert(\"Выберите город!\");\n      navigate('/');\n    } else {\n      dataToApp.dataArr.push(selectedOption);\n      navigate('/app', {\n        state: dataToApp\n      });\n    }\n  }\n  function toMagic() {\n    navigate('/test');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      styles: style,\n      className: styles.selected,\n      defaultValue: selectedOption,\n      onChange: onChangeHandler,\n      options: cities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      onClick: handler,\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      onClick: toMagic,\n      children: \"testMagic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(CityForm, \"o1Ocrq52Pf3Sui8bICS6JA0GA0w=\", false, function () {\n  return [useNavigate];\n});\n_c = CityForm;\nexport default CityForm;\nvar _c;\n$RefreshReg$(_c, \"CityForm\");","map":{"version":3,"names":["React","useEffect","useState","cityService","Select","styles","useNavigate","jsxDEV","_jsxDEV","style","control","base","state","border","isFocused","transition","boxShadow","height","padding","outline","marginTop","fontSize","CityForm","_s","cities","setCities","fetchData","data","getAll","tempdata","i","length","population","tempObject","value","name","label","lat","coords","lon","push","selectedOption","setSelectedOption","onChangeHandler","console","log","dataToApp","type","dataArr","navigate","handler","alert","toMagic","className","form","children","selected","defaultValue","onChange","options","fileName","_jsxFileName","lineNumber","columnNumber","btn","onClick","_c","$RefreshReg$"],"sources":["D:/Urban-Public-Transport-Analysis-Service/ui/src/components/cityForm/cityForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { cityService } from \"../../services/city.service\";\r\nimport Select from 'react-select'\r\nimport styles from './CityForm.module.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst style = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n\r\n      border: state.isFocused ? '1px solid #8a2be2' : 0,\r\n      transition: 'border-color 0.4s ease',\r\n      // This line disable the blue border\r\n      boxShadow: state.isFocused ? '0 0 10 00000080' : 0,\r\n      height: 40,\r\n      padding: 0,\r\n      outline: 'none',\r\n      marginTop: 0,\r\n      \"&:hover\": {\r\n        border: state.isFocused ? '1px solid #8a2be2' : 0,\r\n        boxShadow: state.isFocused ? '0 0 10 00000080' : 0,\r\n      },\r\n      fontSize: 15,\r\n    })\r\n}\r\n\r\nfunction CityForm() {\r\n    const [cities, setCities] = useState([])\r\n    \r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await cityService.getAll()\r\n            let tempdata = [];\r\n            // filtering cities\r\n            \r\n            for (let i = 0; i < data.length; ++i) {\r\n                if (data[i].population < 100000) {\r\n                    continue;\r\n                }\r\n                let tempObject = {}\r\n                tempObject.value = data[i].name;\r\n                tempObject.label = data[i].name;\r\n                tempObject.lat = data[i].coords.lat;\r\n                tempObject.lon = data[i].coords.lon;\r\n                tempdata.push(tempObject)\r\n            }\r\n            setCities(tempdata)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const [selectedOption, setSelectedOption] = useState(cities);\r\n    function onChangeHandler(selectedOption) {\r\n        setSelectedOption(selectedOption);\r\n        console.log(`Selected: ${selectedOption.label}`);\r\n    }\r\n    console.log(selectedOption)\r\n    // passing data to new page\r\n    let dataToApp = {type : \"City\", dataArr: []};\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function handler() {\r\n        if (selectedOption.length === 0) {\r\n            alert(\"Выберите город!\");\r\n            navigate('/');\r\n        }\r\n        else {\r\n            dataToApp.dataArr.push(selectedOption);\r\n            navigate('/app', {state: dataToApp})\r\n        }\r\n    }\r\n\r\n    function toMagic() {\r\n        navigate('/test');\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <Select styles={style} className={styles.selected} defaultValue={selectedOption} onChange={onChangeHandler} options={cities}></Select>\r\n            <button className={styles.btn} onClick={handler}>Apply</button>\r\n            <button className={styles.btn} onClick={toMagic}>testMagic</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}